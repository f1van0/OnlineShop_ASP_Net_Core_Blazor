@using OnlineShop.Client.Services
@using System.Net.Http.Headers
@using System.Net
@using OnlineShop.Client.Pages.Auth
@using OnlineShop.Client.Services.State
@using OnlineShop.Shared
@inject CookieStorage _cookieStorage
@inject HttpClient _httpClient
@inject AppState _appState
@inject IDialogService _dialogService
@inject Navigation _navigationManager
@inject ISnackbar _snackBar

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>
<CascadingValue Name="AppState" Value="@_appState">
    <Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true" OnNavigateAsync="OnNavigateAsync">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/>
        </Found>
        <NotFound>
            <NotFoundPage></NotFoundPage>
        </NotFound>
    </Router>
</CascadingValue>

@code{

    protected override async Task OnInitializedAsync()
    {
        string token = await _cookieStorage.GetCookie<string>("_token");
        if (token != "")
        {
            _httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
            var responseMessage = await _httpClient.GetAsync("api/Auth/GetUserInfo");

            if (responseMessage.StatusCode == HttpStatusCode.OK)
            {
                var userState = await responseMessage.Content.ReadFromJsonAsync<UserInfo>();
                _appState.UserState = userState;
            }
        }
    }

    private async Task OnNavigateAsync(NavigationContext context)
    {
        if (context.Path == "admin" || context.Path == "/admin")
        {
            if (_appState.UserState.UserName == null)
            {
                AbortNavigation();
                _dialogService.Show<AuthDialog>();
                return;
            }

            if (_appState.UserState.Role == "Admin")
                return;

            AbortNavigation();
            _snackBar.Add("You are not authorized to access this page", Severity.Error);
        }
    }

    private void AbortNavigation()
    {
        if (_navigationManager.CanNavigateBack)
            _navigationManager.NavigateBack();
        else
            _navigationManager.NavigateTo("/main");
    }

}