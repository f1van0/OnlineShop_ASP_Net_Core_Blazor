@page "/Main";
@layout MainLayout;
@using OnlineShop.Shared
@using OnlineShop.Client.Pages.Auth
@using System.Net
@using OnlineShop.Client.Services.State
@using OnlineShop.Server.DB.Mappers
@inject HttpClient client
@inject ISnackbar Snackbar
@inject IDialogService Dialog
@inject AppState _appState

<MudContainer>
    @* <MudButton Color="Color.Dark" @onclick="OpenLoginDialog">Normal Snackbar</MudButton> *@
    @if (goodsStats == null)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true"/>
    }
    else if (goodsStats != null)
    {
        @for (int i = 0; i < goodsStats.Length; i++)
        {
            <GoodItem ID=@goodsStats[i].ID Name=@goodsStats[i].Name Price=@goodsStats[i].Price OnBuyGood="BuyGoods"/>
        }
    }
</MudContainer>

@code {
    //private Dictionary<string, string> buttonStrings;
    private GoodsStats[] goodsStats;
    private ColorPalette[] colorPalettes;
    private string test;

    //Спавн, значения и прочее для модалки с логином
    private string username;
    private string password;


    public async Task BuyGoods(int goodsID)
    {
        var response = await client.PostAsJsonAsync<int>("api/Catalog", goodsID);
    // ResponseStatus result = await response.Content.ReadFromJsonAsync<ResponseStatus>();

        switch (response.StatusCode)
        {
            case HttpStatusCode.OK:
                Snackbar.Clear();
                Snackbar.Add("Успешно куплено", Severity.Success);
                break;
            case HttpStatusCode.BadRequest:
                Snackbar.Clear();
                Snackbar.Add("Произошла ошибка при покупке", Severity.Error);
                break;
            case HttpStatusCode.Unauthorized:
                await OpenLoginDialog();
                break;
            default:
                break;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomRight;
        goodsStats = await client.GetFromJsonAsync<GoodsStats[]>("api/Catalog");
    }

    private async Task OpenLoginDialog()
    {
        Dialog.Show<AuthDialog>();
    // StateHasChanged();
    }

}